import{_ as l,c as s,o as a,a as n}from"./app.1f7fc67b.js";const D=JSON.parse('{"title":"HTML+CSS基础面试题","description":"","frontmatter":{},"headers":[{"level":2,"title":"HTML面试题","slug":"html面试题","link":"#html面试题","children":[]},{"level":2,"title":"CSS面试题","slug":"css面试题","link":"#css面试题","children":[{"level":3,"title":"布局","slug":"布局","link":"#布局","children":[]},{"level":3,"title":"定位","slug":"定位","link":"#定位","children":[]},{"level":3,"title":"图文样式","slug":"图文样式","link":"#图文样式","children":[]},{"level":3,"title":"响应式","slug":"响应式","link":"#响应式","children":[]},{"level":3,"title":"CSS3","slug":"css3","link":"#css3","children":[]}]}],"relativePath":"面试/CZ前端/HTML+CSS.md"}'),i={name:"面试/CZ前端/HTML+CSS.md"},e=n(`<h1 id="html-css基础面试题" tabindex="-1">HTML+CSS基础面试题 <a class="header-anchor" href="#html-css基础面试题" aria-hidden="true">#</a></h1><h2 id="html面试题" tabindex="-1">HTML面试题 <a class="header-anchor" href="#html面试题" aria-hidden="true">#</a></h2><ul><li><p>如何理解HTML语义化？</p><ul><li>让人更容易读（增加代码可读性）</li><li>让搜索引擎更容易读（SEO）</li></ul></li><li><p>默认哪些HTML标签是块级，哪些是内联？</p><ul><li>display:block/table; div h1 h2 table ul ol p等；不管内容多少都要独占一行</li><li>display:inline/inline-block; span img input button等；不会独占一行，直至浏览器的边缘</li></ul></li><li><p>什么是DOCTYPE,有何作用？</p><ul><li>Doctype是HTML5的文档声明，通过它可以告诉浏览器，使用哪一个HTML版本标准解析文档</li></ul></li><li><p>src和href的区别？</p><ul><li>src全称source，通常用于img、video、audio、script元素，通过src指向请求外部资源的来源地址，指向的内容会嵌入到文档中当前标签所在位置，在请求src资源时，它会将资源下载并应用到文档内，比如说：js脚本、img图片、frame等元素。当浏览器解析到该元素时，<strong>会暂停其它资源下载，直到将该资源加载、编译、执行完毕</strong>。这也是为什么将js脚本放在底部而不是头部的原因。</li><li>href：全称<em>hyper reference</em>，意味着超链接，<strong>指向网络资源</strong>，当浏览器识别到它指向的⽂件时，就会并⾏下载资源，<strong>不会停⽌对当前⽂档的处理</strong>，通常用于a、link元素。</li></ul></li><li><p>title和H1的区别、b与strong的区别、i与em的区别</p><ul><li><em>title</em> 属性表示网页的标题，<em>h1</em> 元素则表示层次明确的页面内容标题，对页面信息的抓取也有很大的影响</li><li><em>strong</em> 是标明重点内容，有语气加强的含义，使用阅读设备阅读网络时：strong会重读，而<em>b</em>是展示强调内容、</li><li><em>i</em> 是<em>italic</em>(斜体)的简写，是早期的斜体元素，表示内容展示为斜体，而 <em>em</em> 是<em>emphasize</em>（强调）的简写，表示强调的文本</li></ul></li><li><p>什么是严格模式与混杂模式？</p><ul><li>严格模式：是以浏览器支持的最高标准运行</li><li>混杂模式：页面以宽松向下兼容的方式显示，模拟老式浏览器的行为</li></ul></li><li><p>H5和HTML5的区别？</p><ul><li>H5是一个产品名词，包含了最新的HTML5、CSS3、ES6等新技术来制作的应用</li><li>HTML5是一个技术名词，指的就是第五代HTML</li></ul></li><li><p>对于web标准w3c的理解</p><ul><li><code>Web标准</code>简单来说可以分为结构、表现、行为。其中结构是由HTML各种标签组成，简单来说就是body里面写入标签是为了页面的结构。表现指的是CSS层叠样式表，通过CSS可以让我们的页面结构标签更具美感。行为指的是页面和用户具有一定的交互，这部分主要由JS组成</li><li><code>w3c</code>,全称：world wide web consortium是一个制定各种标准的非盈利性组织，也叫万维网联盟，标准包括HTML、CSS、ECMAScript等等，web标准的制定有很多好处，比如说： <ul><li>可以统一开发流程，统一使用标准化开发工具（VSCode、WebStorm、Sublime），方便多人协作</li><li>学习成本降低，只需要学习标准就行，否则就要学习各个浏览器厂商标准</li><li>跨平台，方便迁移都不同设备</li><li>降低代码维护成本</li></ul></li></ul></li><li><p>HTML5新增了哪些新特性？</p><ul><li>HTML5主要是关于图像、位置、存储、多任务等功能的增加： <ul><li>语义化标签，如：article、footer、header、nav等</li><li>视频video、音频audio</li><li>画布canvas</li><li>表单控件，calemdar、date、time、email</li><li>地理</li><li>本地离线存储，localStorage长期存储数据，浏览器关闭后数据不丢失，sessionStorage的数据在浏览器关闭后自动删除</li><li>拖拽释放</li></ul></li></ul></li><li><p>你知道SEO中的TDK吗？</p><ul><li>在SEO中，TDK其实就是<code>title</code>、<code>description</code>、<code>keywords</code>这三个标签，title表示标题标签，description是描述标签，keywords是关键词标签</li></ul></li></ul><h2 id="css面试题" tabindex="-1">CSS面试题 <a class="header-anchor" href="#css面试题" aria-hidden="true">#</a></h2><h3 id="布局" tabindex="-1">布局 <a class="header-anchor" href="#布局" aria-hidden="true">#</a></h3><ul><li><p>盒子模型的宽度如何计算</p><ul><li>标准盒模型的宽等于offsetWidth =(内容宽度＋内边距＋边框），无外边距</li><li>怪异盒模型，设置的宽度值包括 内容宽度＋内边距＋边框，自动压缩内容宽度</li></ul></li><li><p>margin纵向重叠问题</p><ul><li>相邻元素的margin-top和margin-bottom会发生重叠</li><li>空内容的p标签也会重叠</li><li>答案：15px</li></ul></li><li><p>margin的top left right bottom负值的情况？</p><ul><li>margin-top/left负值，元素向上、左移动</li><li>margin-right负值，自身不受影响，右侧元素左移</li><li>margin-bottom负值，自身不受影响，下方元素上移</li></ul></li><li><p>bfc的理解与应用？</p><ul><li><p>Block format context, 块级格式化上下文</p></li><li><p>是 一块独立的渲染区域，内部元素的渲染不会影响边界以外的元素</p></li><li><p><strong>形成bfc的常见条件？</strong></p><ul><li>float不为none</li><li>position为absolute或fixed</li><li><strong>overflow不为none，如hidden</strong></li><li>display：flex inline-block等</li></ul></li><li><p><strong>bfc的常见应用</strong></p><ul><li>清除浮动</li></ul></li></ul></li><li><p>float布局的问题，以及clearfix</p><ul><li><p>实现圣杯布局和双飞翼布局</p><ul><li>三栏布局，中间一栏最先加载和渲染（内容最重要）</li><li>两侧内容固定，中间内容随宽度自适应</li><li>一般用于pc网页</li></ul></li><li><p>圣杯布局和双飞翼布局的技术总结</p><ul><li>使用float布局</li><li>两侧使用margin负值，以便和中间内容横向重叠</li><li>防止中间内容被两侧覆盖，一个用padding,一个用margin</li></ul></li><li><p>手写clearfix</p><ul><li><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> table</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></li></ul></li></ul></li><li><p>flex画色子</p></li></ul><h3 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-hidden="true">#</a></h3><ul><li><p>absolute和relative根据什么定位</p><ul><li>relative依据自身定位</li><li>absolute依据最近一层的定位元素定位</li></ul></li><li><p>居中对齐有哪些实现方式</p><ul><li><p>水平</p><ul><li>inline元素：text-align：center</li><li>block元素：margin：auto、父元素flex布局</li><li>absolute元素：left：50% + margin-left负值、left:50% + transform:translateX(-50%)、top/left/bottom/right = 0 + margin:auto</li></ul></li><li><p>垂直</p><ul><li>line-height值等于height值</li><li>其他同水平类似</li></ul></li></ul></li></ul><h3 id="图文样式" tabindex="-1">图文样式 <a class="header-anchor" href="#图文样式" aria-hidden="true">#</a></h3><ul><li><p>line-height的继承问题（有坑）</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">/* line-height: 30px; */</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">/* 直接继承给子元素 */</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">/* line-height: 1.5; */</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">/* 使用小数或分数会先根据子元素的font-size算出具体的值，继承给p */</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">line-height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#676E95;font-style:italic;">/* 使用百分比会先根据父元素的font-size算出具体的值，继承给p */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#FFCB6B;">p</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#B2CCD6;">font-size</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">style</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">this is p</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div></li></ul><h3 id="响应式" tabindex="-1">响应式 <a class="header-anchor" href="#响应式" aria-hidden="true">#</a></h3><ul><li><p>rem是什么？</p><ul><li>相对长度单位，相对于根元素，常用于响应式布局</li></ul></li><li><p>如何实现响应式？</p><ul><li>使用rem+media-quary,根据不同的屏幕宽度设置html的font-size</li><li>弊端：“阶梯型”</li></ul></li><li><p>网页视口尺寸</p><ul><li>window.screen.height // 屏幕高度</li><li>window.innerHeight // 网页视口高度</li><li>document.body.clientHeight // body高度</li></ul></li><li><p>vw/vh</p><ul><li>vw网页视口宽度大小的1/100</li><li>vh网页视口高度大小的1/100</li><li>vmax两者的较大值，vmin两者的最小值</li></ul></li></ul><h3 id="css3" tabindex="-1">CSS3 <a class="header-anchor" href="#css3" aria-hidden="true">#</a></h3><ul><li>关于CSS3动画</li></ul>`,14),p=[e];function o(t,c,r,d,u,h){return a(),s("div",null,p)}const C=l(i,[["render",o]]);export{D as __pageData,C as default};

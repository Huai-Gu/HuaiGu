import{_ as s,c as a,o as n,a as l}from"./app.a517788b.js";const F=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"","slug":"","link":"#","children":[{"level":3,"title":"事实上，只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值。","slug":"事实上-只要某种数据结构具有-iterator-接口-都可以采用数组形式的解构赋值。","link":"#事实上-只要某种数据结构具有-iterator-接口-都可以采用数组形式的解构赋值。","children":[]}]}],"relativePath":"JS.TS/ES6/解构赋值.md"}'),o={name:"JS.TS/ES6/解构赋值.md"},p=l(`<h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> test </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">y</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">test</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">y)  </span><span style="color:#676E95;font-style:italic;">// 1，3</span></span>
<span class="line"></span></code></pre></div><p>还可以进行不完全解构</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> test </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">test</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x) </span><span style="color:#676E95;font-style:italic;">//1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 还可以用占位符号取得后面值 类似于</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">_</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">x</span><span style="color:#89DDFF;">]=</span><span style="color:#A6ACCD;"> test</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x) </span><span style="color:#676E95;font-style:italic;">//3</span></span>
<span class="line"></span></code></pre></div><h3 id="事实上-只要某种数据结构具有-iterator-接口-都可以采用数组形式的解构赋值。" tabindex="-1">事实上，只要某种数据结构具有 Iterator 接口，都可以采用数组形式的解构赋值。 <a class="header-anchor" href="#事实上-只要某种数据结构具有-iterator-接口-都可以采用数组形式的解构赋值。" aria-hidden="true">#</a></h3><p><a href="./Iterator.html">Iterator 接口看这边</a></p>`,6),e=[p];function t(c,r,C,y,i,A){return n(),a("div",null,e)}const d=s(o,[["render",t]]);export{F as __pageData,d as default};

import{_ as s,c as a,o as n,a as p}from"./app.7f7ef6e0.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Map 构造函数","slug":"map-构造函数","link":"#map-构造函数","children":[]},{"level":2,"title":"Object和Map的区别","slug":"object和map的区别","link":"#object和map的区别","children":[]},{"level":2,"title":"weakMap","slug":"weakmap","link":"#weakmap","children":[]}],"relativePath":"JS.TS/基础/Js中的map和weakMap.md"}'),l={name:"JS.TS/基础/Js中的map和weakMap.md"},o=p(`<h2 id="map-构造函数" tabindex="-1">Map 构造函数 <a class="header-anchor" href="#map-构造函数" aria-hidden="true">#</a></h2><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> map </span><span style="color:#89DDFF;">=new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Map</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">huaigu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">tomao</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">huaigu</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"></span></code></pre></div><p>clear() 删除 Map 中的所有元素。 delete() 删除由键指定的元素。 has() 如果键存在，则返回 true。 forEach() 为每个键/值对调用回调。</p><h2 id="object和map的区别" tabindex="-1">Object和Map的区别 <a class="header-anchor" href="#object和map的区别" aria-hidden="true">#</a></h2><ol><li><p>Object无法使用非字符串值作为键名，但Map的键名可以是任意类型</p></li><li><p>可直接遍历<br> 因为Map是键值对集合，可以直接用for..of 或foreach遍历</p></li></ol><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>for in的缺陷 遍历所有可枚举属性包括原型上的属性 键值为string类型，增加了类型转换的开销</p></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#FFCB6B;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;">(i </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> arr)</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">i</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 如果不想访问原型上的属性可以用 hasOwnProperty判断是不是该对象的实例属性</span></span>
<span class="line"></span></code></pre></div><h2 id="weakmap" tabindex="-1">weakMap <a class="header-anchor" href="#weakmap" aria-hidden="true">#</a></h2><p>WeakMap 对象是一组键/值对的集合，其中的键是弱引用的。其键必须是对象，而值可以是任意的。 原始数据类型不能作为WeakMap 的key 且weakMap 所引用的对象不计入 <a href="https://huai-gu.github.io/HuaiGu/JS.TS/%E5%9F%BA%E7%A1%80/%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6.html" target="_blank" rel="noreferrer">垃圾回收</a></p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-palenight"><code><span class="line"></span>
<span class="line"></span>
<span class="line"></span></code></pre></div>`,10),e=[o];function t(c,r,i,y,D,F){return n(),a("div",null,e)}const d=s(l,[["render",t]]);export{A as __pageData,d as default};
